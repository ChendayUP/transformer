import torch

print('pytorch')
a = torch.rand(4, 3, 28, 28)
print(a[0].shape) #取到第一个维度
print(a[1].shape) #取到第一个维度
print(a[0, 0].shape) # 取到二个维度
print(a[1, 2, 2, 4])  # 具体到某个元素


print('python')
 
# 譬如：4张图片，每张三个通道，每个通道28行28列的像素
a = torch.rand(4, 3, 28, 28)
 
# 在第一个维度上取后0和1，等同于取第一、第二张图片
b = a[:2]
print(b.shape)  

print(a[:, -1].shape)
# print(f'b = {b}')
 
# 在第一个维度上取0和1,在第二个维度上取0，
# 等同于取第一、第二张图片中的第一个通道
print(a[:2, :1, :, :].shape)  
 
# 在第一个维度上取0和1,在第二个维度上取1,2，
# 等同于取第一、第二张图片中的第二个通道与第三个通道
print(a[:2, 1:, :, :].shape) 
 
# 在第一个维度上取0和1,在第二个维度上取1,2，
# 等同于取第一、第二张图片中的第二个通道与第三个通道
print(a[:2, -2:, :, :].shape)  
# 注意：负值的索引即表示倒数第几个元素，-2就是倒数第二个元素。
# torch.Size([2, 2, 28, 28])

# 使用step隔行采样
# 在第一、第二维度取所有元素，在第三、第四维度隔行采样
# 等同于所有图片所有通道的行列每个一行或者一列采样
# 注意：下面的代码不包括28
print(a[:, :, 0:28:2, 0:28:2].shape) 
# torch.Size([4, 3, 14, 14])
print(a[:, :, ::2, ::2].shape)  # 等同于上面语句
# torch.Size([4, 3, 14, 14])